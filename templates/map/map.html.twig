{% extends 'base.html.twig' %}

{% block title %}Signaler un problème{% endblock %}
{% block stylesheets %}
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.1/dist/leaflet.css" integrity="sha512-Rksm5RenBEKSKFjgI3a41vrjkw4EVPlJ3+OiI65vTjIdo9brlAacEuKOiQ5OFh7cOI1bkDwLqdLw3Zg0cRJAAQ=="
          crossorigin="" />
    <link rel="stylesheet" type="text/css" href="https://unpkg.com/leaflet.markercluster@1.3.0/dist/MarkerCluster.css" />
    <link rel="stylesheet" type="text/css" href="https://unpkg.com/leaflet.markercluster@1.3.0/dist/MarkerCluster.Default.css" />
    <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.8.2/css/all.css"
{% endblock %}

{% block body %}


    <div id="map">
    </div>

    <button id="btnmodal" class="button addEventButt is-outlined is-danger is-large">Signaler un problème</button>
    {% if (is_granted('ROLE_MAIRE')) %}
    <button id="btnmodal" class="button listEventButt is-outlined is-danger is-large">Liste</button>
    {% endif %}

    <div id="modal" class="modal">
        <div class="modal-background"></div>
        <div class="modal-card">
            <header class="modal-card-head">
                <p class="modal-card-title">Signaler un problème</p>
                <button id="cancel" class="delete" aria-label="close"></button>
            </header>
            <section class="modal-card-body">
                {{ form_start(form) }}
                {{ form_widget(form.Type, {'attr': {'class': 'input is-rounded is-primary', 'placeholder': 'Type'}})  }}
                {{ form_widget(form.address, {'attr': {'class': 'input is-rounded is-primary', 'placeholder': 'Adresse'}})  }}
                {{ form_widget(form.zipCode, {'attr': {'class': 'input is-rounded is-primary', 'placeholder': 'Code Postal'}})  }}
                {{ form_widget(form.city, {'attr': {'class': 'input is-rounded is-primary', 'placeholder': 'Ville'}})  }}
            </section>
            <footer class="modal-card-foot">
                <button class="button is-primary">{{ button_label|default('Save') }}</button>
                {{ form_end(form) }}
                <button id="closeModal" class="button closeModal">Cancel</button>
            </footer>
        </div>
    </div>




{% endblock %}
{% block javascripts %}
    {{ encore_entry_script_tags('main') }}
    <script src="https://unpkg.com/leaflet@1.3.1/dist/leaflet.js" integrity="sha512-/Nsx9X4HebavoBvEBuyp3I7od5tA0UzAxs+j83KgC8PU0kgB4XiK4Lfe4y4cgBtaRJQEIFCW+oC506aPT2L1zw=="
            crossorigin=""></script>
    <script type="text/javascript">
        // On initialise la latitude et la longitude de Lyon (centre de la carte)
        let lat = 45.75;
        let lon = 4.85;
        let macarte = null;
        let zoom = 14; // Zoom de la carte par défaut
        // Fonction d'initialisation de la carte
        function initMap() {
            // Créer l'objet "macarte" et l'insèrer dans l'élément HTML qui a l'ID "map"
            macarte = L.map('map').setView([lat, lon], zoom);
            // Leaflet ne récupère pas les cartes (tiles) sur un serveur par défaut. Nous devons lui préciser où nous souhaitons les récupérer. Ici, openstreetmap.fr
            L.tileLayer('https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png', {
                // Il est toujours bien de laisser le lien vers la source des données
                attribution: 'données © <a href="//osm.org/copyright">OpenStreetMap</a>/ODbL - rendu <a href="//openstreetmap.fr">OSM France</a>',
                minZoom: 1,
                maxZoom: 20
            }).addTo(macarte);
        }
        window.onload = function(){
            // Fonction d'initialisation qui s'exécute lorsque le DOM est chargé
            initMap();

            let adresses =
                [
                    {% for problem in problems %}
                    {
                        lat : '{{ problem.lat }}',
                        long : '{{ problem.lon }}',
                        id : '{{ problem.id }}',
                        type: '{{ problem.type }}',
                        address: '{{ problem.address }}',
                        city: '{{ problem.city }}',
                        ZC: '{{ problem.zipcode }}'
                    },
                    {% endfor %}
                ];
            // Nous parcourons la liste des adresses
            for (adresse in adresses) {

                var customIcon = L.icon({
                    iconUrl: 'https://www.passerelle-esc.com/wp-content/uploads/2017/04/attention.png',
                    iconSize: [25, 25],
                    popupAnchor: [0,-15]
                });

                var customPopup = "<h1>" + adresses[adresse].type + "</h1> <p>"
                + adresses[adresse].address + "</p>"+
                "<p>"
                + adresses[adresse].ZC + " " + adresses[adresse].city +
                '</p> <a href="/' + adresses[adresse].id + '/validate"> <img src=\'http://swiftyjimmy.com/wp-content/uploads/2017/09/approved.png\' width=\'30px\'/></a> "'
                let marker = L.marker([adresses[adresse].lat, adresses[adresse].long], {icon: customIcon});

                // marker.bindPopup(
                // "<h1>"+adresses[adresse].type+"</h1> <p>"
                // + adresses[adresse].address + "</p>"+
                // "<p>"
                // + adresses[adresse].ZC + " " + adresses[adresse].city +
                // '</p> <a href="/' + adresses[adresse].id + '/validate"> Approuver </a>'
                // )

                marker.bindPopup(customPopup);
                    marker.addTo(macarte);
                // Nous ajoutons la popup. A noter que son contenu (ici la variable ville) peut être du HTML
                // marker.bindPopup(adresses[adresse].place).openPopup();
            }
        };
    </script>

{% endblock%}

